//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Inputs/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""6de257fc-bb65-4cdc-8514-a55ae42faf33"",
            ""actions"": [
                {
                    ""name"": ""MoveKeyboard"",
                    ""type"": ""Value"",
                    ""id"": ""f4bcae46-7e4b-4f4e-b778-758eeff8f2d6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveStick"",
                    ""type"": ""Value"",
                    ""id"": ""5555933b-a823-4a94-a454-e032a8418c2e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""c192d9fb-75ed-4d2d-b391-32f9ec8f111b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRightClick"",
                    ""type"": ""Button"",
                    ""id"": ""fcc7fbaf-d184-4b2e-a932-aa43cb53417d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyE"",
                    ""type"": ""Button"",
                    ""id"": ""63a6c26e-5d68-40dd-931b-82dfd819945b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLocation"",
                    ""type"": ""Value"",
                    ""id"": ""3b25450c-8ab8-430f-8ad3-43d3aa506562"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""36dba0d2-eb61-430b-aa20-1828afc454de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShiftKey"",
                    ""type"": ""Button"",
                    ""id"": ""dd00e356-4888-4c58-9fa2-9acc59fb79ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyQ"",
                    ""type"": ""Button"",
                    ""id"": ""e823884e-be46-4815-8463-2f2d4e8c2a44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""60c8d094-ced5-4431-b745-72f8454a5c70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""e7e57b17-7e72-47e1-b7c6-b06838136f3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""077cfb6a-efed-4c5b-ac81-fee5863d58b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""ebbcf876-4c79-4168-87d5-d9882f0eb261"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""c1ea6b0b-5c9d-4687-8226-9b3cf7632468"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftButton"",
                    ""type"": ""Button"",
                    ""id"": ""9affea42-cff2-4b99-90d2-b14a45a427f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LowerButton"",
                    ""type"": ""Button"",
                    ""id"": ""40e46c94-7317-456f-828a-51726ef483cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseController"",
                    ""type"": ""Button"",
                    ""id"": ""6bcc9a36-7101-4b21-84ac-1c08d70e8ed6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButton"",
                    ""type"": ""Button"",
                    ""id"": ""6e191a42-8051-4f55-9614-470b7478c3fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2c9ceb95-59f8-46bd-b18e-ad68ab5d1601"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""02362bc3-2b40-46dc-b6b3-7339e1a69a7c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cd07c8e9-cd5b-4712-9a96-3421d1ba5fca"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5bdc09c7-9f86-4d45-a12b-0fa026308732"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""489dd034-ef13-44a4-b93b-98d0fca363b9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f4c5d7bc-d9e5-46e5-86b1-2dacdad0d595"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe9917f4-e64d-4ff8-8c76-31aa39b3cdb8"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseRightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2863947d-396f-422e-b85f-47d340e8fadf"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d173cc7-e93b-45ca-b35f-3e751d432fbf"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLocation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cab530d7-9273-4b8d-95b2-99c9b7f10cd5"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16f88dd9-ce65-42a0-9772-af004a0ad83e"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47843e62-c994-4984-8182-0f052bf5078c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7f1cecb-8ecd-4d1a-92d9-ad071258f83c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""531ffdf4-2a58-42f6-8260-44f0dd2b6e0d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48d572fb-1417-474c-bc92-dd4ba5a9b51a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce7d1f9c-c8f0-4c68-9d7c-4dd4864174f4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1976494-6ece-41f5-b476-cd6e9d36cd2c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ce47aea-ce2e-44bf-b6e3-e4722799897c"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""968b3449-8604-4699-a5e8-9c2c4c3fa030"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88965f83-be98-43a6-8e99-5d8e2a28c1b7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowerButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e6f8f6f-7e0e-49cb-b0a0-8af5a16174e6"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e44debc-0219-4d7c-8914-ee9771d997d6"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d026827-6139-4b3c-beef-dfc65326aac3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""3bfbebdf-84b0-4974-b207-78737a43a58a"",
            ""actions"": [
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""26cfe580-64d7-4618-9762-572abc107b95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""6510ec62-a320-400e-b937-e0500da0c082"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35f5dd5c-0a2c-4b6c-88de-08bfcaa50bd1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efa1279a-1004-4dbc-a4ab-0af9c332765d"",
                    ""path"": ""dpadepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""d8af2603-af92-43ae-95a3-9ccffe4dd8ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c47ab04d-25cc-42a4-a0a7-9897a9bb3403"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a24beb8-ed30-4a62-806d-69bf16b0c0d9"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dd5b75b8-b98a-4c4b-8d41-b5aea705584f"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ef2c37c3-a980-49ee-9afc-6aaa49a4e3aa"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""id"": ""d50a1836-3b18-447d-bba0-9aa41e20d7e0"",
            ""actions"": [
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""6c0e7be0-0731-4a62-9055-2b1f1eece9b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""df1aef1d-4cd6-45ea-b31d-7166da288f60"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2c5c470-e6fa-4c39-9a71-650720f88f02"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92ff713c-b397-49f3-9b09-e88af3a13cb4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dce0736-4be3-4a25-9afd-e845db4c1acc"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d21ecb2-467d-4b8e-892d-aab954050b65"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d131b8a7-5e7b-4f01-86a8-d7db5f454970"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a01d6b3-d88a-4c58-a924-3bf2897e9ed6"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30b876e3-1afb-4ebd-a91e-5be7f2f75095"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc4fe473-730d-4865-8721-6338dc2a2d1d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd60de30-9480-48c0-984a-e9c289ce2969"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e2e884b-90e7-49c6-86f5-0b0006224f15"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d8a94db-3a4b-4a35-92db-766e9e1cb42d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""id"": ""3203ee1a-a839-493d-b061-d3c482c438c0"",
            ""actions"": [
                {
                    ""name"": ""Anykey"",
                    ""type"": ""Button"",
                    ""id"": ""ed17f62a-842f-4104-bcd4-37d32bb9bbce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""de28c9bb-e76d-4a2e-ae12-9b0e628cc058"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Anykey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MoveKeyboard = m_Player.FindAction("MoveKeyboard", throwIfNotFound: true);
        m_Player_MoveStick = m_Player.FindAction("MoveStick", throwIfNotFound: true);
        m_Player_MouseLeftClick = m_Player.FindAction("MouseLeftClick", throwIfNotFound: true);
        m_Player_MouseRightClick = m_Player.FindAction("MouseRightClick", throwIfNotFound: true);
        m_Player_KeyE = m_Player.FindAction("KeyE", throwIfNotFound: true);
        m_Player_MouseLocation = m_Player.FindAction("MouseLocation", throwIfNotFound: true);
        m_Player_Zoom = m_Player.FindAction("Zoom", throwIfNotFound: true);
        m_Player_ShiftKey = m_Player.FindAction("ShiftKey", throwIfNotFound: true);
        m_Player_KeyQ = m_Player.FindAction("KeyQ", throwIfNotFound: true);
        m_Player_Esc = m_Player.FindAction("Esc", throwIfNotFound: true);
        m_Player_RightTrigger = m_Player.FindAction("RightTrigger", throwIfNotFound: true);
        m_Player_LeftTrigger = m_Player.FindAction("LeftTrigger", throwIfNotFound: true);
        m_Player_LeftJoystick = m_Player.FindAction("LeftJoystick", throwIfNotFound: true);
        m_Player_RightJoystick = m_Player.FindAction("RightJoystick", throwIfNotFound: true);
        m_Player_LeftButton = m_Player.FindAction("LeftButton", throwIfNotFound: true);
        m_Player_LowerButton = m_Player.FindAction("LowerButton", throwIfNotFound: true);
        m_Player_PauseController = m_Player.FindAction("PauseController", throwIfNotFound: true);
        m_Player_RightButton = m_Player.FindAction("RightButton", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_AnyKey = m_Controller.FindAction("AnyKey", throwIfNotFound: true);
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_Anykey = m_Keyboard.FindAction("Anykey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_MoveKeyboard;
    private readonly InputAction m_Player_MoveStick;
    private readonly InputAction m_Player_MouseLeftClick;
    private readonly InputAction m_Player_MouseRightClick;
    private readonly InputAction m_Player_KeyE;
    private readonly InputAction m_Player_MouseLocation;
    private readonly InputAction m_Player_Zoom;
    private readonly InputAction m_Player_ShiftKey;
    private readonly InputAction m_Player_KeyQ;
    private readonly InputAction m_Player_Esc;
    private readonly InputAction m_Player_RightTrigger;
    private readonly InputAction m_Player_LeftTrigger;
    private readonly InputAction m_Player_LeftJoystick;
    private readonly InputAction m_Player_RightJoystick;
    private readonly InputAction m_Player_LeftButton;
    private readonly InputAction m_Player_LowerButton;
    private readonly InputAction m_Player_PauseController;
    private readonly InputAction m_Player_RightButton;
    public struct PlayerActions
    {
        private @InputControls m_Wrapper;
        public PlayerActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveKeyboard => m_Wrapper.m_Player_MoveKeyboard;
        public InputAction @MoveStick => m_Wrapper.m_Player_MoveStick;
        public InputAction @MouseLeftClick => m_Wrapper.m_Player_MouseLeftClick;
        public InputAction @MouseRightClick => m_Wrapper.m_Player_MouseRightClick;
        public InputAction @KeyE => m_Wrapper.m_Player_KeyE;
        public InputAction @MouseLocation => m_Wrapper.m_Player_MouseLocation;
        public InputAction @Zoom => m_Wrapper.m_Player_Zoom;
        public InputAction @ShiftKey => m_Wrapper.m_Player_ShiftKey;
        public InputAction @KeyQ => m_Wrapper.m_Player_KeyQ;
        public InputAction @Esc => m_Wrapper.m_Player_Esc;
        public InputAction @RightTrigger => m_Wrapper.m_Player_RightTrigger;
        public InputAction @LeftTrigger => m_Wrapper.m_Player_LeftTrigger;
        public InputAction @LeftJoystick => m_Wrapper.m_Player_LeftJoystick;
        public InputAction @RightJoystick => m_Wrapper.m_Player_RightJoystick;
        public InputAction @LeftButton => m_Wrapper.m_Player_LeftButton;
        public InputAction @LowerButton => m_Wrapper.m_Player_LowerButton;
        public InputAction @PauseController => m_Wrapper.m_Player_PauseController;
        public InputAction @RightButton => m_Wrapper.m_Player_RightButton;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @MoveKeyboard.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveKeyboard;
                @MoveKeyboard.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveKeyboard;
                @MoveKeyboard.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveKeyboard;
                @MoveStick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveStick;
                @MoveStick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveStick;
                @MoveStick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveStick;
                @MouseLeftClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLeftClick;
                @MouseRightClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseRightClick;
                @MouseRightClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseRightClick;
                @MouseRightClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseRightClick;
                @KeyE.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyE;
                @KeyE.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyE;
                @KeyE.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyE;
                @MouseLocation.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLocation;
                @MouseLocation.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLocation;
                @MouseLocation.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLocation;
                @Zoom.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZoom;
                @ShiftKey.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShiftKey;
                @ShiftKey.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShiftKey;
                @ShiftKey.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShiftKey;
                @KeyQ.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyQ;
                @KeyQ.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyQ;
                @KeyQ.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyQ;
                @Esc.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @Esc.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @Esc.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @RightTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightTrigger;
                @LeftTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftTrigger;
                @LeftJoystick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftJoystick;
                @LeftJoystick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftJoystick;
                @LeftJoystick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftJoystick;
                @RightJoystick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightJoystick;
                @RightJoystick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightJoystick;
                @RightJoystick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightJoystick;
                @LeftButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftButton;
                @LeftButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftButton;
                @LeftButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftButton;
                @LowerButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLowerButton;
                @LowerButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLowerButton;
                @LowerButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLowerButton;
                @PauseController.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseController;
                @PauseController.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseController;
                @PauseController.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseController;
                @RightButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightButton;
                @RightButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightButton;
                @RightButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightButton;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveKeyboard.started += instance.OnMoveKeyboard;
                @MoveKeyboard.performed += instance.OnMoveKeyboard;
                @MoveKeyboard.canceled += instance.OnMoveKeyboard;
                @MoveStick.started += instance.OnMoveStick;
                @MoveStick.performed += instance.OnMoveStick;
                @MoveStick.canceled += instance.OnMoveStick;
                @MouseLeftClick.started += instance.OnMouseLeftClick;
                @MouseLeftClick.performed += instance.OnMouseLeftClick;
                @MouseLeftClick.canceled += instance.OnMouseLeftClick;
                @MouseRightClick.started += instance.OnMouseRightClick;
                @MouseRightClick.performed += instance.OnMouseRightClick;
                @MouseRightClick.canceled += instance.OnMouseRightClick;
                @KeyE.started += instance.OnKeyE;
                @KeyE.performed += instance.OnKeyE;
                @KeyE.canceled += instance.OnKeyE;
                @MouseLocation.started += instance.OnMouseLocation;
                @MouseLocation.performed += instance.OnMouseLocation;
                @MouseLocation.canceled += instance.OnMouseLocation;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @ShiftKey.started += instance.OnShiftKey;
                @ShiftKey.performed += instance.OnShiftKey;
                @ShiftKey.canceled += instance.OnShiftKey;
                @KeyQ.started += instance.OnKeyQ;
                @KeyQ.performed += instance.OnKeyQ;
                @KeyQ.canceled += instance.OnKeyQ;
                @Esc.started += instance.OnEsc;
                @Esc.performed += instance.OnEsc;
                @Esc.canceled += instance.OnEsc;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
                @LeftTrigger.started += instance.OnLeftTrigger;
                @LeftTrigger.performed += instance.OnLeftTrigger;
                @LeftTrigger.canceled += instance.OnLeftTrigger;
                @LeftJoystick.started += instance.OnLeftJoystick;
                @LeftJoystick.performed += instance.OnLeftJoystick;
                @LeftJoystick.canceled += instance.OnLeftJoystick;
                @RightJoystick.started += instance.OnRightJoystick;
                @RightJoystick.performed += instance.OnRightJoystick;
                @RightJoystick.canceled += instance.OnRightJoystick;
                @LeftButton.started += instance.OnLeftButton;
                @LeftButton.performed += instance.OnLeftButton;
                @LeftButton.canceled += instance.OnLeftButton;
                @LowerButton.started += instance.OnLowerButton;
                @LowerButton.performed += instance.OnLowerButton;
                @LowerButton.canceled += instance.OnLowerButton;
                @PauseController.started += instance.OnPauseController;
                @PauseController.performed += instance.OnPauseController;
                @PauseController.canceled += instance.OnPauseController;
                @RightButton.started += instance.OnRightButton;
                @RightButton.performed += instance.OnRightButton;
                @RightButton.canceled += instance.OnRightButton;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Navigate;
    public struct UIActions
    {
        private @InputControls m_Wrapper;
        public UIActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Controller
    private readonly InputActionMap m_Controller;
    private IControllerActions m_ControllerActionsCallbackInterface;
    private readonly InputAction m_Controller_AnyKey;
    public struct ControllerActions
    {
        private @InputControls m_Wrapper;
        public ControllerActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @AnyKey => m_Wrapper.m_Controller_AnyKey;
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        public void SetCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterface != null)
            {
                @AnyKey.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAnyKey;
            }
            m_Wrapper.m_ControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
            }
        }
    }
    public ControllerActions @Controller => new ControllerActions(this);

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_Anykey;
    public struct KeyboardActions
    {
        private @InputControls m_Wrapper;
        public KeyboardActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Anykey => m_Wrapper.m_Keyboard_Anykey;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @Anykey.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnAnykey;
                @Anykey.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnAnykey;
                @Anykey.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnAnykey;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Anykey.started += instance.OnAnykey;
                @Anykey.performed += instance.OnAnykey;
                @Anykey.canceled += instance.OnAnykey;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IPlayerActions
    {
        void OnMoveKeyboard(InputAction.CallbackContext context);
        void OnMoveStick(InputAction.CallbackContext context);
        void OnMouseLeftClick(InputAction.CallbackContext context);
        void OnMouseRightClick(InputAction.CallbackContext context);
        void OnKeyE(InputAction.CallbackContext context);
        void OnMouseLocation(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnShiftKey(InputAction.CallbackContext context);
        void OnKeyQ(InputAction.CallbackContext context);
        void OnEsc(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnRightJoystick(InputAction.CallbackContext context);
        void OnLeftButton(InputAction.CallbackContext context);
        void OnLowerButton(InputAction.CallbackContext context);
        void OnPauseController(InputAction.CallbackContext context);
        void OnRightButton(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnSubmit(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
    }
    public interface IControllerActions
    {
        void OnAnyKey(InputAction.CallbackContext context);
    }
    public interface IKeyboardActions
    {
        void OnAnykey(InputAction.CallbackContext context);
    }
}
